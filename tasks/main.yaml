- name: Install some packages
  apt:
    name: "{{ item }}"
    state: present
  with_items:
    - supervisor
    - nginx
    - nodejs
    - nodejs-legacy
    - npm
  become: yes

- name: Install "json" node.js package globally.
  npm:
    name: json
    global: yes
  become: yes

- name: Check if parity is installed
  command: dpkg-query -W parity
  register: parity_check_deb
  failed_when: parity_check_deb.rc > 1
  changed_when: parity_check_deb.rc == 1  

- name: Download parity
  get_url: 
    url="{{ parity_deb }}"
    dest="{{ ansible_user_dir }}/parity.deb"
  become: yes
  when: parity_check_deb.rc == 1

- name: Install parity package
  apt: deb="{{ ansible_user_dir }}/parity.deb"
  become: yes
  when: parity_check_deb.rc == 1

- name: Create parity config folder
  file: 
    path: "{{ parity_config_path }}"
    state: directory
    mode: 0755
    owner: root
    group: root
  become: yes

- name: Remove default nginx config
  file:
    path: /etc/nginx/sites-enabled/default
    state: absent
  become: yes

- name: Copy parity and supervisor configs
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dst }}"
  with_items:
    - { src: "supervisor/parity.conf.jn2", dst: "/etc/supervisor/conf.d/parity.conf" }
    - { src: "parity/config.toml.jn2", dst: "{{ parity_config }}" }
    - { src: "parity/spec.json.jn2", dst: "{{ parity_spec }}" }
  become: yes

- name: Restart supervisor services
  service:
    name: "{{ item }}"
    state: restarted
    sleep: 5
  with_items:
   - supervisor

- name: Copy nginx config
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dst }}"
  with_items:
    - { src: "nginx/parity.conf", dst: "/etc/nginx/conf.d/parity.conf"}
  notify: reload nginx
  become: yes

- name: Create authority address
  uri:
    url: "http://localhost:{{ parity_rpc_entries.port }}"
    method: POST
    HEADER_Content-Type: "application/json"
    body_format: json
    body: 
      jsonrpc: "2.0"
      method: "parity_newAccountFromPhrase"
      params: 
        - "{{ item.phrase }}"
        - "{{ item.pwd }}"
      id: 0
  with_items:
    "{{ parity_authorities }}"
  register: auth_addr

- name: Create users
  uri:
    url: "http://localhost:{{ parity_rpc_entries.port }}"
    method: POST
    HEADER_Content-Type: "application/json"
    body_format: json
    body:
      jsonrpc: "2.0"
      method: "parity_newAccountFromPhrase"
      params:
        - "{{ item.phrase }}"
        - "{{ item.pwd }}"
      id: 0
  with_items:
    "{{ parity_users }}"
  register: user_addr

- name: Add authority address
  shell: json -I -q -f "{{ parity_spec }}" -e "this.engine.authorityRound.params.validators.list.push('{{ item.json.result }}')" 
  with_items:
    "{{ auth_addr.results }}"
  notify: restart supervisor

- name: Add user address
  shell: json -I -q -f "{{ parity_spec }}" -e "this.accounts['{{ item.json.result }}'] = {}"
  with_items:
    "{{ user_addr.results }}"
  notify: restart supervisor

- name: Add user balance
  shell: json -I -q -f "{{ parity_spec }}" -e "this.accounts['{{ item.0.json.result }}']['balance'] = '{{ item.1.balance }}'"
  with_together:
    - "{{ user_addr.results }}"
    - "{{ parity_users }}"
  notify: restart supervisor
